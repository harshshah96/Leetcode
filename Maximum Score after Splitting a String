static int io_opt = []() {
  ios::sync_with_stdio(false);
  return 0;
}();
class Solution {
public:
    int maxScore(string s) {
        //Intuition:
        //  solving with prefix sum and suffix sum.
        //  prefix sum will carry number of zeros upto that index.
        //  suffix sum will carry number of 1s after that index.

        int n=s.size();
        vector<int>pre(n);
        vector<int> suff(n);

        suff[n-1]=0;

        for(int i=0; i<n-1; i++){
                if(s[i]=='0'){
                    pre[i]= (i>0 ? (pre[i-1]): 0) + 1;
                }else pre[i]=(i>0 ? (pre[i-1]): 0);
        }
    
        for(int i=n-1; i>=0; i--){
            if(i<n-1)suff[i]=suff[i+1]+(s[i+1] -'0');
        }

        int ans=INT_MIN;
        
        for(int i=0; i<n; i++){
            ans=max(ans,pre[i]+suff[i]);
        }

        return ans;

    }
};
